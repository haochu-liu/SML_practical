{"trial_id": "2", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "units", "default": null, "conditions": [], "min_value": 32, "max_value": 518, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation", "default": "relu", "conditions": [], "values": ["relu", "softplus", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dropout_0", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.05, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "layers", "default": null, "conditions": [], "min_value": 1, "max_value": 5, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_0", "default": null, "conditions": [], "min_value": 32, "max_value": 518, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_0", "default": "relu", "conditions": [], "values": ["relu", "softplus", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dropout_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.05, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_1", "default": null, "conditions": [], "min_value": 32, "max_value": 518, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_1", "default": "relu", "conditions": [], "values": ["relu", "softplus", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dropout_2", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.05, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_2", "default": null, "conditions": [], "min_value": 32, "max_value": 518, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_2", "default": "relu", "conditions": [], "values": ["relu", "softplus", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dropout_3", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.05, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_3", "default": null, "conditions": [], "min_value": 32, "max_value": 518, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_3", "default": "relu", "conditions": [], "values": ["relu", "softplus", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dropout_4", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.05, "sampling": "linear"}}], "values": {"units": 192, "activation": "relu", "dropout_0": 0.25, "layers": 3, "units_0": 32, "activation_0": "sigmoid", "dropout_1": 0.35000000000000003, "units_1": 480, "activation_1": "relu", "dropout_2": 0.45, "units_2": 512, "activation_2": "softplus", "dropout_3": 0.05, "units_3": 224, "activation_3": "relu", "dropout_4": 0.0}}, "metrics": {"metrics": {"accuracy": {"direction": "max", "observations": [{"value": [0.7370833158493042], "step": 15}]}, "loss": {"direction": "min", "observations": [{"value": [0.7799853682518005], "step": 15}]}, "val_accuracy": {"direction": "max", "observations": [{"value": [0.590833306312561], "step": 15}]}, "val_loss": {"direction": "min", "observations": [{"value": [1.3026556968688965], "step": 15}]}}}, "score": 0.590833306312561, "best_step": 15, "status": "COMPLETED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\Liu_h\\anaconda3\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Liu_h\\anaconda3\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\Liu_h\\anaconda3\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\Liu_h\\anaconda3\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\Liu_h\\anaconda3\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\Liu_h\\anaconda3\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 123, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"c:\\Users\\Liu_h\\anaconda3\\Lib\\site-packages\\keras\\src\\trainers\\data_adapters\\data_adapter_utils.py\", line 132, in check_data_cardinality\n    raise ValueError(msg)\nValueError: Data cardinality is ambiguous. Make sure all arrays contain the same number of samples.'x' sizes: 4800\n'y' sizes: 1200\n\n"}